@mixin text($options: (), $widgetInstanceId: "", $widgetInstanceUUID: "") {
  $configuration: map-merge(
    (
      textBackgroundImage: $textBackgroundImage,
      textBackgroundColor: $textBackgroundColor,
      textBackgroundType: $textBackgroundType,
      textBackgroundSize: $textBackgroundSize,
      textBackgroundRepeat: $textBackgroundRepeat,
      textBackgroundPosX: $textBackgroundPosX,
      textBackgroundPosY: $textBackgroundPosY,
      textWidth: $textWidth,
      textHeight: $textHeight,
      textMinWidth: $textMinWidth,
      textMaxWidth: $textMaxWidth,
      textMinHeight: $textMinHeight,
      textMaxHeight: $textMaxHeight,
      textPosition: $textPosition,
      textDisplay: $textDisplay,
      textPositionTop: $textPositionTop,
      textPositionRight: $textPositionRight,
      textPositionBottom: $textPositionBottom,
      textPositionLeft: $textPositionLeft,
      textIndex: $textIndex,
      textMarginTop: $textMarginTop,
      textMarginRight: $textMarginRight,
      textMarginBottom: $textMarginBottom,
      textMarginLeft: $textMarginLeft,
      textPaddingTop: $textPaddingTop,
      textPaddingRight: $textPaddingRight,
      textPaddingBottom: $textPaddingBottom,
      textPaddingLeft: $textPaddingLeft,
      textBorderSides: $textBorderSides,
      textBorderWidth: $textBorderWidth,
      textBorderStyle: $textBorderStyle,
      textBorderColor: $textBorderColor,
      textBorderRadius: $textBorderRadius,
      textShadowStyle: $textShadowStyle,
      textShadowXoffset: $textShadowXoffset,
      textShadowYoffset: $textShadowYoffset,
      textShadowBlur: $textShadowBlur,
      textShadowSpread: $textShadowSpread,
      textShadowColor: $textShadowColor,
      paragraphFontFamily: $paragraphFontFamily,
      paragraphFontSize: $paragraphFontSize,
      paragraphTextColor: $paragraphTextColor,
      paragraphFontWeight: $paragraphFontWeight,
      paragraphFontStyle: $paragraphFontStyle,
      paragraphFontDecoration: $paragraphFontDecoration,
      paragraphLineHeight: $paragraphLineHeight,
      paragraphMarginTop: $paragraphMarginTop,
      paragraphMarginBottom: $paragraphMarginBottom,
      textVisibility: $textVisibility,
      textBackgroundImageTablet: $textBackgroundImageTablet,
      textBackgroundColorTablet: $textBackgroundColorTablet,
      textBackgroundTypeTablet: $textBackgroundTypeTablet,
      textBackgroundSizeTablet: $textBackgroundSizeTablet,
      textBackgroundRepeatTablet: $textBackgroundRepeatTablet,
      textBackgroundPosXTablet: $textBackgroundPosXTablet,
      textBackgroundPosYTablet: $textBackgroundPosYTablet,
      textWidthTablet: $textWidthTablet,
      textHeightTablet: $textHeightTablet,
      textMinWidthTablet: $textMinWidthTablet,
      textMaxWidthTablet: $textMaxWidthTablet,
      textMinHeightTablet: $textMinHeightTablet,
      textMaxHeightTablet: $textMaxHeightTablet,
      textPositionTablet: $textPositionTablet,
      textDisplayTablet: $textDisplayTablet,
      textPositionTopTablet: $textPositionTopTablet,
      textPositionRightTablet: $textPositionRightTablet,
      textPositionBottomTablet: $textPositionBottomTablet,
      textPositionLeftTablet: $textPositionLeftTablet,
      textIndexTablet: $textIndexTablet,
      textMarginTopTablet: $textMarginTopTablet,
      textMarginRightTablet: $textMarginRightTablet,
      textMarginBottomTablet: $textMarginBottomTablet,
      textMarginLeftTablet: $textMarginLeftTablet,
      textPaddingTopTablet: $textPaddingTopTablet,
      textPaddingRightTablet: $textPaddingRightTablet,
      textPaddingBottomTablet: $textPaddingBottomTablet,
      textPaddingLeftTablet: $textPaddingLeftTablet,
      textBorderSidesTablet: $textBorderSidesTablet,
      textBorderWidthTablet: $textBorderWidthTablet,
      textBorderStyleTablet: $textBorderStyleTablet,
      textBorderColorTablet: $textBorderColorTablet,
      textBorderRadiusTablet: $textBorderRadiusTablet,
      textShadowStyleTablet: $textShadowStyleTablet,
      textShadowXoffsetTablet: $textShadowXoffsetTablet,
      textShadowYoffsetTablet: $textShadowYoffsetTablet,
      textShadowBlurTablet: $textShadowBlurTablet,
      textShadowSpreadTablet: $textShadowSpreadTablet,
      textShadowColorTablet: $textShadowColorTablet,
      paragraphFontFamilyTablet: $paragraphFontFamilyTablet,
      paragraphFontSizeTablet: $paragraphFontSizeTablet,
      paragraphTextColorTablet: $paragraphTextColorTablet,
      paragraphFontWeightTablet: $paragraphFontWeightTablet,
      paragraphFontStyleTablet: $paragraphFontStyleTablet,
      paragraphFontDecorationTablet: $paragraphFontDecorationTablet,
      paragraphLineHeightTablet: $paragraphLineHeightTablet,
      paragraphMarginTopTablet: $paragraphMarginTopTablet,
      paragraphMarginBottomTablet: $paragraphMarginBottomTablet,
      textVisibilityTablet: $textVisibilityTablet,
      textBackgroundImageDesktop: $textBackgroundImageDesktop,
      textBackgroundColorDesktop: $textBackgroundColorDesktop,
      textBackgroundTypeDesktop: $textBackgroundTypeDesktop,
      textBackgroundSizeDesktop: $textBackgroundSizeDesktop,
      textBackgroundRepeatDesktop: $textBackgroundRepeatDesktop,
      textBackgroundPosXDesktop: $textBackgroundPosXDesktop,
      textBackgroundPosYDesktop: $textBackgroundPosYDesktop,
      textWidthDesktop: $textWidthDesktop,
      textHeightDesktop: $textHeightDesktop,
      textMinWidthDesktop: $textMinWidthDesktop,
      textMaxWidthDesktop: $textMaxWidthDesktop,
      textMinHeightDesktop: $textMinHeightDesktop,
      textMaxHeightDesktop: $textMaxHeightDesktop,
      textPositionDesktop: $textPositionDesktop,
      textPositionTopDesktop: $textPositionTopDesktop,
      textDisplayDesktop: $textDisplayDesktop,
      textPositionRightDesktop: $textPositionRightDesktop,
      textPositionBottomDesktop: $textPositionBottomDesktop,
      textPositionLeftDesktop: $textPositionLeftDesktop,
      textIndexDesktop: $textIndexDesktop,
      textMarginTopDesktop: $textMarginTopDesktop,
      textMarginRightDesktop: $textMarginRightDesktop,
      textMarginBottomDesktop: $textMarginBottomDesktop,
      textMarginLeftDesktop: $textMarginLeftDesktop,
      textPaddingTopDesktop: $textPaddingTopDesktop,
      textPaddingRightDesktop: $textPaddingRightDesktop,
      textPaddingBottomDesktop: $textPaddingBottomDesktop,
      textPaddingLeftDesktop: $textPaddingLeftDesktop,
      textBorderSidesDesktop: $textBorderSidesDesktop,
      textBorderWidthDesktop: $textBorderWidthDesktop,
      textBorderStyleDesktop: $textBorderStyleDesktop,
      textBorderColorDesktop: $textBorderColorDesktop,
      textBorderRadiusDesktop: $textBorderRadiusDesktop,
      textShadowStyleDesktop: $textShadowStyleDesktop,
      textShadowXoffsetDesktop: $textShadowXoffsetDesktop,
      textShadowYoffsetDesktop: $textShadowYoffsetDesktop,
      textShadowBlurDesktop: $textShadowBlurDesktop,
      textShadowSpreadDesktop: $textShadowSpreadDesktop,
      textShadowColorDesktop: $textShadowColorDesktop,
      paragraphFontFamilyDesktop: $paragraphFontFamilyDesktop,
      paragraphFontSizeDesktop: $paragraphFontSizeDesktop,
      paragraphTextColorDesktop: $paragraphTextColorDesktop,
      paragraphFontWeightDesktop: $paragraphFontWeightDesktop,
      paragraphFontStyleDesktop: $paragraphFontStyleDesktop,
      paragraphFontDecorationDesktop: $paragraphFontDecorationDesktop,
      paragraphLineHeightDesktop: $paragraphLineHeightDesktop,
      paragraphMarginTopDesktop: $paragraphMarginTopDesktop,
      paragraphMarginBottomDesktop: $paragraphMarginBottomDesktop,
      textVisibilityDesktop: $textVisibilityDesktop,
      textHeadingOneColor: $textHeadingOneColor,
      textHeadingOneFontFamily: $textHeadingOneFontFamily,
      textHeadingOneSize: $textHeadingOneSize,
      textHeadingOneHeight: $textHeadingOneHeight,
      textHeadingOneWeight: $textHeadingOneWeight,
      textHeadingOneStyle: $textHeadingOneStyle,
      textHeadingOneDecoration: $textHeadingOneDecoration,
      textHeadingOneMarginTop: $textHeadingOneMarginTop,
      textHeadingOneMarginBottom: $textHeadingOneMarginBottom,
      textHeadingOneColorTablet: $textHeadingOneColorTablet,
      textHeadingOneFontFamilyTablet: $textHeadingOneFontFamilyTablet,
      textHeadingOneSizeTablet: $textHeadingOneSizeTablet,
      textHeadingOneHeightTablet: $textHeadingOneHeightTablet,
      textHeadingOneWeightTablet: $textHeadingOneWeightTablet,
      textHeadingOneStyleTablet: $textHeadingOneStyleTablet,
      textHeadingOneDecorationTablet: $textHeadingOneDecorationTablet,
      textHeadingOneMarginTopTablet: $textHeadingOneMarginTopTablet,
      textHeadingOneMarginBottomTablet: $textHeadingOneMarginBottomTablet,
      textHeadingOneColorDesktop: $textHeadingOneColorDesktop,
      textHeadingOneFontFamilyDesktop: $textHeadingOneFontFamilyDesktop,
      textHeadingOneSizeDesktop: $textHeadingOneSizeDesktop,
      textHeadingOneHeightDesktop: $textHeadingOneHeightDesktop,
      textHeadingOneWeightDesktop: $textHeadingOneWeightDesktop,
      textHeadingOneStyleDesktop: $textHeadingOneStyleDesktop,
      textHeadingOneDecorationDesktop: $textHeadingOneDecorationDesktop,
      textHeadingOneMarginTopDesktop: $textHeadingOneMarginTopDesktop,
      textHeadingOneMarginBottomDesktop: $textHeadingOneMarginBottomDesktop,
      textHeadingTwoColor: $textHeadingTwoColor,
      textHeadingTwoFontFamily: $textHeadingTwoFontFamily,
      textHeadingTwoSize: $textHeadingTwoSize,
      textHeadingTwoHeight: $textHeadingTwoHeight,
      textHeadingTwoWeight: $textHeadingTwoWeight,
      textHeadingTwoStyle: $textHeadingTwoStyle,
      textHeadingTwoDecoration: $textHeadingTwoDecoration,
      textHeadingTwoMarginTop: $textHeadingTwoMarginTop,
      textHeadingTwoMarginBottom: $textHeadingTwoMarginBottom,
      textHeadingTwoColorTablet: $textHeadingTwoColorTablet,
      textHeadingTwoFontFamilyTablet: $textHeadingTwoFontFamilyTablet,
      textHeadingTwoSizeTablet: $textHeadingTwoSizeTablet,
      textHeadingTwoHeightTablet: $textHeadingTwoHeightTablet,
      textHeadingTwoWeightTablet: $textHeadingTwoWeightTablet,
      textHeadingTwoStyleTablet: $textHeadingTwoStyleTablet,
      textHeadingTwoDecorationTablet: $textHeadingTwoDecorationTablet,
      textHeadingTwoMarginTopTablet: $textHeadingTwoMarginTopTablet,
      textHeadingTwoMarginBottomTablet: $textHeadingTwoMarginBottomTablet,
      textHeadingTwoColorDesktop: $textHeadingTwoColorDesktop,
      textHeadingTwoFontFamilyDesktop: $textHeadingTwoFontFamilyDesktop,
      textHeadingTwoSizeDesktop: $textHeadingTwoSizeDesktop,
      textHeadingTwoHeightDesktop: $textHeadingTwoHeightDesktop,
      textHeadingTwoWeightDesktop: $textHeadingTwoWeightDesktop,
      textHeadingTwoStyleDesktop: $textHeadingTwoStyleDesktop,
      textHeadingTwoDecorationDesktop: $textHeadingTwoDecorationDesktop,
      textHeadingTwoMarginTopDesktop: $textHeadingTwoMarginTopDesktop,
      textHeadingTwoMarginBottomDesktop: $textHeadingTwoMarginBottomDesktop,
      textHeadingThreeColor: $textHeadingThreeColor,
      textHeadingThreeFontFamily: $textHeadingThreeFontFamily,
      textHeadingThreeSize: $textHeadingThreeSize,
      textHeadingThreeHeight: $textHeadingThreeHeight,
      textHeadingThreeWeight: $textHeadingThreeWeight,
      textHeadingThreeStyle: $textHeadingThreeStyle,
      textHeadingThreeDecoration: $textHeadingThreeDecoration,
      textHeadingThreeMarginTop: $textHeadingThreeMarginTop,
      textHeadingThreeMarginBottom: $textHeadingThreeMarginBottom,
      textHeadingThreeColorTablet: $textHeadingThreeColorTablet,
      textHeadingThreeFontFamilyTablet: $textHeadingThreeFontFamilyTablet,
      textHeadingThreeSizeTablet: $textHeadingThreeSizeTablet,
      textHeadingThreeHeightTablet: $textHeadingThreeHeightTablet,
      textHeadingThreeWeightTablet: $textHeadingThreeWeightTablet,
      textHeadingThreeStyleTablet: $textHeadingThreeStyleTablet,
      textHeadingThreeDecorationTablet: $textHeadingThreeDecorationTablet,
      textHeadingThreeMarginTopTablet: $textHeadingThreeMarginTopTablet,
      textHeadingThreeMarginBottomTablet: $textHeadingThreeMarginBottomTablet,
      textHeadingThreeColorDesktop: $textHeadingThreeColorDesktop,
      textHeadingThreeFontFamilyDesktop: $textHeadingThreeFontFamilyDesktop,
      textHeadingThreeSizeDesktop: $textHeadingThreeSizeDesktop,
      textHeadingThreeHeightDesktop: $textHeadingThreeHeightDesktop,
      textHeadingThreeWeightDesktop: $textHeadingThreeWeightDesktop,
      textHeadingThreeStyleDesktop: $textHeadingThreeStyleDesktop,
      textHeadingThreeDecorationDesktop: $textHeadingThreeDecorationDesktop,
      textHeadingThreeMarginTopDesktop: $textHeadingThreeMarginTopDesktop,
      textHeadingThreeMarginBottomDesktop: $textHeadingThreeMarginBottomDesktop,
      textHeadingFourColor: $textHeadingFourColor,
      textHeadingFourFontFamily: $textHeadingFourFontFamily,
      textHeadingFourSize: $textHeadingFourSize,
      textHeadingFourHeight: $textHeadingFourHeight,
      textHeadingFourWeight: $textHeadingFourWeight,
      textHeadingFourStyle: $textHeadingFourStyle,
      textHeadingFourDecoration: $textHeadingFourDecoration,
      textHeadingFourMarginTop: $textHeadingFourMarginTop,
      textHeadingFourMarginBottom: $textHeadingFourMarginBottom,
      textHeadingFourColorTablet: $textHeadingFourColorTablet,
      textHeadingFourFontFamilyTablet: $textHeadingFourFontFamilyTablet,
      textHeadingFourSizeTablet: $textHeadingFourSizeTablet,
      textHeadingFourHeightTablet: $textHeadingFourHeightTablet,
      textHeadingFourWeightTablet: $textHeadingFourWeightTablet,
      textHeadingFourStyleTablet: $textHeadingFourStyleTablet,
      textHeadingFourDecorationTablet: $textHeadingFourDecorationTablet,
      textHeadingFourMarginTopTablet: $textHeadingFourMarginTopTablet,
      textHeadingFourMarginBottomTablet: $textHeadingFourMarginBottomTablet,
      textHeadingFourColorDesktop: $textHeadingFourColorDesktop,
      textHeadingFourFontFamilyDesktop: $textHeadingFourFontFamilyDesktop,
      textHeadingFourSizeDesktop: $textHeadingFourSizeDesktop,
      textHeadingFourHeightDesktop: $textHeadingFourHeightDesktop,
      textHeadingFourWeightDesktop: $textHeadingFourWeightDesktop,
      textHeadingFourStyleDesktop: $textHeadingFourStyleDesktop,
      textHeadingFourDecorationDesktop: $textHeadingFourDecorationDesktop,
      textHeadingFourMarginTopDesktop: $textHeadingFourMarginTopDesktop,
      textHeadingFourMarginBottomDesktop: $textHeadingFourMarginBottomDesktop,
      textHeadingFiveColor: $textHeadingFiveColor,
      textHeadingFiveFontFamily: $textHeadingFiveFontFamily,
      textHeadingFiveSize: $textHeadingFiveSize,
      textHeadingFiveHeight: $textHeadingFiveHeight,
      textHeadingFiveWeight: $textHeadingFiveWeight,
      textHeadingFiveStyle: $textHeadingFiveStyle,
      textHeadingFiveDecoration: $textHeadingFiveDecoration,
      textHeadingFiveMarginTop: $textHeadingFiveMarginTop,
      textHeadingFiveMarginBottom: $textHeadingFiveMarginBottom,
      textHeadingFiveColorTablet: $textHeadingFiveColorTablet,
      textHeadingFiveFontFamilyTablet: $textHeadingFiveFontFamilyTablet,
      textHeadingFiveSizeTablet: $textHeadingFiveSizeTablet,
      textHeadingFiveHeightTablet: $textHeadingFiveHeightTablet,
      textHeadingFiveWeightTablet: $textHeadingFiveWeightTablet,
      textHeadingFiveStyleTablet: $textHeadingFiveStyleTablet,
      textHeadingFiveDecorationTablet: $textHeadingFiveDecorationTablet,
      textHeadingFiveMarginTopTablet: $textHeadingFiveMarginTopTablet,
      textHeadingFiveMarginBottomTablet: $textHeadingFiveMarginBottomTablet,
      textHeadingFiveColorDesktop: $textHeadingFiveColorDesktop,
      textHeadingFiveFontFamilyDesktop: $textHeadingFiveFontFamilyDesktop,
      textHeadingFiveSizeDesktop: $textHeadingFiveSizeDesktop,
      textHeadingFiveHeightDesktop: $textHeadingFiveHeightDesktop,
      textHeadingFiveWeightDesktop: $textHeadingFiveWeightDesktop,
      textHeadingFiveStyleDesktop: $textHeadingFiveStyleDesktop,
      textHeadingFiveDecorationDesktop: $textHeadingFiveDecorationDesktop,
      textHeadingFiveMarginTopDesktop: $textHeadingFiveMarginTopDesktop,
      textHeadingFiveMarginBottomDesktop: $textHeadingFiveMarginBottomDesktop,
      textHeadingSixColor: $textHeadingSixColor,
      textHeadingSixFontFamily: $textHeadingSixFontFamily,
      textHeadingSixSize: $textHeadingSixSize,
      textHeadingSixHeight: $textHeadingSixHeight,
      textHeadingSixWeight: $textHeadingSixWeight,
      textHeadingSixStyle: $textHeadingSixStyle,
      textHeadingSixDecoration: $textHeadingSixDecoration,
      textHeadingSixMarginTop: $textHeadingSixMarginTop,
      textHeadingSixMarginBottom: $textHeadingSixMarginBottom,
      textHeadingSixColorTablet: $textHeadingSixColorTablet,
      textHeadingSixFontFamilyTablet: $textHeadingSixFontFamilyTablet,
      textHeadingSixSizeTablet: $textHeadingSixSizeTablet,
      textHeadingSixHeightTablet: $textHeadingSixHeightTablet,
      textHeadingSixWeightTablet: $textHeadingSixWeightTablet,
      textHeadingSixStyleTablet: $textHeadingSixStyleTablet,
      textHeadingSixDecorationTablet: $textHeadingSixDecorationTablet,
      textHeadingSixMarginTopTablet: $textHeadingSixMarginTopTablet,
      textHeadingSixMarginBottomTablet: $textHeadingSixMarginBottomTablet,
      textHeadingSixColorDesktop: $textHeadingSixColorDesktop,
      textHeadingSixFontFamilyDesktop: $textHeadingSixFontFamilyDesktop,
      textHeadingSixSizeDesktop: $textHeadingSixSizeDesktop,
      textHeadingSixHeightDesktop: $textHeadingSixHeightDesktop,
      textHeadingSixWeightDesktop: $textHeadingSixWeightDesktop,
      textHeadingSixStyleDesktop: $textHeadingSixStyleDesktop,
      textHeadingSixDecorationDesktop: $textHeadingSixDecorationDesktop,
      textHeadingSixMarginTopDesktop: $textHeadingSixMarginTopDesktop,
      textHeadingSixMarginBottomDesktop: $textHeadingSixMarginBottomDesktop
    ),
    $options
  );

  $instanceSelector: '[data-widget-package="com.fliplet.text"]';
  @if $widgetInstanceUUID != "" {
    $instanceSelector: '#{$instanceSelector}[data-uuid="#{$widgetInstanceUUID}"]';
  } @else if $widgetInstanceId != "" {
    $instanceSelector: '#{$instanceSelector}[data-id="#{$widgetInstanceId}"]';
  }

  #{$instanceSelector} {
    @if map-get($configuration, textBackgroundType) == "Image" {
      @if map-get($configuration, textBackgroundImage) == "none" {
        background-image: map-get($configuration, textBackgroundImage);
      } @else {
        background-image: url("#{map-get($configuration, textBackgroundImage)}");
      }
    } @else if map-get($configuration, textBackgroundType) == "Color" {
      background-image: none;
      background-color: map-get($configuration, textBackgroundColor);
    } @else {
      background-image: none;
      background-color: transparent;
    }

    background-size: map-get($configuration, textBackgroundSize);
    background-repeat: map-get($configuration, textBackgroundRepeat);
    background-position: map-get($configuration, textBackgroundPosX)
      map-get($configuration, textBackgroundPosY);

    position: map-get($configuration, textPosition) !important;
    z-index: map-get($configuration, textIndex);

    @if map-get($configuration, textPosition) == "relative" {
      @if map-get($configuration, textVisibility) == "visible" {
        display: map-get($configuration, textDisplay) !important;
      } @else {
        display: none !important;
      }
    } @else {
      @if map-get($configuration, textVisibility) == "visible" {
        display: block !important;
      } @else {
        display: none !important;
      }

      top: map-get($configuration, textPositionTop);
      right: map-get($configuration, textPositionRight);
      bottom: map-get($configuration, textPositionBottom);
      left: map-get($configuration, textPositionLeft);
    }

    width: map-get($configuration, textWidth);
    min-width: map-get($configuration, textMinWidth);
    max-width: map-get($configuration, textMaxWidth);
    height: auto !important;
    min-height: map-get($configuration, textMinHeight);
    max-height: map-get($configuration, textMaxHeight);
    margin: map-get($configuration, textMarginTop) map-get($configuration, textMarginRight)
      map-get($configuration, textMarginBottom) map-get($configuration, textMarginLeft);
    padding: map-get($configuration, textPaddingTop) map-get($configuration, textPaddingRight)
      map-get($configuration, textPaddingBottom) map-get($configuration, textPaddingLeft);

    @include borderOnly(
      (
        borderSides: map-get($configuration, textBorderSides),
        borderWidth: map-get($configuration, textBorderWidth),
        borderStyle: map-get($configuration, textBorderStyle),
        borderColor: map-get($configuration, textBorderColor)
      )
    );
    border-radius: map-get($configuration, textBorderRadius);
    @include shadowOnly(
      (
        shadowStyle: map-get($configuration, textShadowStyle),
        shadowXOffset: map-get($configuration, textShadowXoffset),
        shadowYOffset: map-get($configuration, textShadowYoffset),
        shadowBlur: map-get($configuration, textShadowBlur),
        shadowSpread: map-get($configuration, textShadowSpread),
        shadowColor: map-get($configuration, textShadowColor)
      )
    );

    // Styles for tablet
    @include above($tabletBreakpoint) {
      @if map-get($configuration, textBackgroundTypeTablet) == "Image" {
        @if map-get($configuration, textBackgroundImageTablet) == "none" {
          background-image: map-get($configuration, textBackgroundImageTablet);
        } @else {
          background-image: url("#{map-get($configuration, textBackgroundImageTablet)}");
        }
      } @else if map-get($configuration, textBackgroundTypeTablet) == "Color" {
        background-image: none;
        background-color: map-get($configuration, textBackgroundColorTablet);
      } @else {
        background-image: none;
        background-color: transparent;
      }

      background-size: map-get($configuration, textBackgroundSizeTablet);
      background-repeat: map-get($configuration, textBackgroundRepeatTablet);
      background-position: map-get($configuration, textBackgroundPosXTablet)
        map-get($configuration, textBackgroundPosYTablet);

      position: map-get($configuration, textPositionTablet) !important;
      z-index: map-get($configuration, textIndexTablet);

      @if map-get($configuration, textPositionTablet) == "relative" {
        @if map-get($configuration, textVisibilityTablet) == "visible" {
          display: map-get($configuration, textDisplayTablet) !important;
        } @else {
          display: none !important;
        }
      } @else {
        @if map-get($configuration, textVisibilityTablet) == "visible" {
          display: block !important;
        } @else {
          display: none !important;
        }

        top: map-get($configuration, textPositionTopTablet);
        right: map-get($configuration, textPositionRightTablet);
        bottom: map-get($configuration, textPositionBottomTablet);
        left: map-get($configuration, textPositionLeftTablet);
      }

      width: map-get($configuration, textWidthTablet);
      min-width: map-get($configuration, textMinWidthTablet);
      max-width: map-get($configuration, textMaxWidthTablet);
      height: auto !important;
      min-height: map-get($configuration, textMinHeightTablet);
      max-height: map-get($configuration, textMaxHeightTablet);
      margin: map-get($configuration, textMarginTopTablet)
        map-get($configuration, textMarginRightTablet)
        map-get($configuration, textMarginBottomTablet)
        map-get($configuration, textMarginLeftTablet);
      padding: map-get($configuration, textPaddingTopTablet)
        map-get($configuration, textPaddingRightTablet)
        map-get($configuration, textPaddingBottomTablet)
        map-get($configuration, textPaddingLeftTablet);

      @include borderOnly(
        (
          borderSides: map-get($configuration, textBorderSidesTablet),
          borderWidth: map-get($configuration, textBorderWidthTablet),
          borderStyle: map-get($configuration, textBorderStyleTablet),
          borderColor: map-get($configuration, textBorderColorTablet)
        )
      );
      border-radius: map-get($configuration, textBorderRadiusTablet);
      @include shadowOnly(
        (
          shadowStyle: map-get($configuration, textShadowStyleTablet),
          shadowXOffset: map-get($configuration, textShadowXoffsetTablet),
          shadowYOffset: map-get($configuration, textShadowYoffsetTablet),
          shadowBlur: map-get($configuration, textShadowBlurTablet),
          shadowSpread: map-get($configuration, textShadowSpreadTablet),
          shadowColor: map-get($configuration, textShadowColorTablet)
        )
      );
    }

    // Styles for desktop
    @include above($desktopBreakpoint) {
      @if map-get($configuration, textBackgroundTypeDesktop) == "Image" {
        @if map-get($configuration, textBackgroundImageDesktop) == "none" {
          background-image: map-get($configuration, textBackgroundImageDesktop);
        } @else {
          background-image: url("#{map-get($configuration, textBackgroundImageDesktop)}");
        }
      } @else if map-get($configuration, textBackgroundTypeDesktop) == "Color" {
        background-image: none;
        background-color: map-get($configuration, textBackgroundColorDesktop);
      } @else {
        background-image: none;
        background-color: transparent;
      }

      background-size: map-get($configuration, textBackgroundSizeDesktop);
      background-repeat: map-get($configuration, textBackgroundRepeatDesktop);
      background-position: map-get($configuration, textBackgroundPosXDesktop)
        map-get($configuration, textBackgroundPosYDesktop);

      position: map-get($configuration, textPositionDesktop) !important;
      z-index: map-get($configuration, textIndexDesktop);

      @if map-get($configuration, textPositionDesktop) == "relative" {
        @if map-get($configuration, textVisibilityDesktop) == "visible" {
          display: map-get($configuration, textDisplayDesktop) !important;
        } @else {
          display: none !important;
        }
      } @else {
        @if map-get($configuration, textVisibilityDesktop) == "visible" {
          display: block !important;
        } @else {
          display: none !important;
        }

        top: map-get($configuration, textPositionTopDesktop);
        right: map-get($configuration, textPositionRightDesktop);
        bottom: map-get($configuration, textPositionBottomDesktop);
        left: map-get($configuration, textPositionLeftDesktop);
      }

      width: map-get($configuration, textWidthDesktop);
      min-width: map-get($configuration, textMinWidthDesktop);
      max-width: map-get($configuration, textMaxWidthDesktop);
      height: auto !important;
      min-height: map-get($configuration, textMinHeightDesktop);
      max-height: map-get($configuration, textMaxHeightDesktop);
      margin: map-get($configuration, textMarginTopDesktop)
        map-get($configuration, textMarginRightDesktop)
        map-get($configuration, textMarginBottomDesktop)
        map-get($configuration, textMarginLeftDesktop);
      padding: map-get($configuration, textPaddingTopDesktop)
        map-get($configuration, textPaddingRightDesktop)
        map-get($configuration, textPaddingBottomDesktop)
        map-get($configuration, textPaddingLeftDesktop);

      @include borderOnly(
        (
          borderSides: map-get($configuration, textBorderSidesDesktop),
          borderWidth: map-get($configuration, textBorderWidthDesktop),
          borderStyle: map-get($configuration, textBorderStyleDesktop),
          borderColor: map-get($configuration, textBorderColorDesktop)
        )
      );
      border-radius: map-get($configuration, textBorderRadiusDesktop);
      @include shadowOnly(
        (
          shadowStyle: map-get($configuration, textShadowStyleDesktop),
          shadowXOffset: map-get($configuration, textShadowXoffsetDesktop),
          shadowYOffset: map-get($configuration, textShadowYoffsetDesktop),
          shadowBlur: map-get($configuration, textShadowBlurDesktop),
          shadowSpread: map-get($configuration, textShadowSpreadDesktop),
          shadowColor: map-get($configuration, textShadowColorDesktop)
        )
      );
    }

    p {
      color: map-get($configuration, paragraphTextColor);
      font-family: map-get($configuration, paragraphFontFamily);
      font-size: map-get($configuration, paragraphFontSize);
      font-style: map-get($configuration, paragraphFontStyle);
      text-decoration: map-get($configuration, paragraphFontDecoration);
      line-height: map-get($configuration, paragraphLineHeight);
      font-weight: map-get($configuration, paragraphFontWeight);
      min-height: 1em;

      margin-top: map-get($configuration, paragraphMarginTop);
      margin-bottom: map-get($configuration, paragraphMarginBottom);

      // Styles for tablet
      @include above($tabletBreakpoint) {
        color: map-get($configuration, paragraphTextColorTablet);
        font-family: map-get($configuration, paragraphFontFamilyTablet);
        font-size: map-get($configuration, paragraphFontSizeTablet);
        font-style: map-get($configuration, paragraphFontStyleTablet);
        text-decoration: map-get($configuration, paragraphFontDecorationTablet);
        line-height: map-get($configuration, paragraphLineHeightTablet);
        font-weight: map-get($configuration, paragraphFontWeightTablet);

        margin-top: map-get($configuration, paragraphMarginTopTablet);
        margin-bottom: map-get($configuration, paragraphMarginBottomTablet);
      }

      // Styles for desktop
      @include above($desktopBreakpoint) {
        color: map-get($configuration, paragraphTextColorDesktop);
        font-family: map-get($configuration, paragraphFontFamilyDesktop);
        font-size: map-get($configuration, paragraphFontSizeDesktop);
        font-style: map-get($configuration, paragraphFontStyleDesktop);
        text-decoration: map-get($configuration, paragraphFontDecorationDesktop);
        line-height: map-get($configuration, paragraphLineHeightDesktop);
        font-weight: map-get($configuration, paragraphFontWeightDesktop);

        margin-top: map-get($configuration, paragraphMarginTopDesktop);
        margin-bottom: map-get($configuration, paragraphMarginBottomDesktop);
      }
    }

    h1 {
      color: map-get($configuration, textHeadingOneColor);
      font-family: map-get($configuration, textHeadingOneFontFamily);
      font-size: map-get($configuration, textHeadingOneSize);
      font-style: map-get($configuration, textHeadingOneStyle);
      text-decoration: map-get($configuration, textHeadingOneDecoration);
      line-height: map-get($configuration, textHeadingOneHeight);
      font-weight: map-get($configuration, textHeadingOneWeight);

      margin-top: map-get($configuration, textHeadingOneMarginTop);
      margin-bottom: map-get($configuration, textHeadingOneMarginBottom);

      // Styles for tablet
      @include above($tabletBreakpoint) {
        color: map-get($configuration, textHeadingOneColorTablet);
        font-family: map-get($configuration, textHeadingOneFontFamilyTablet);
        font-size: map-get($configuration, textHeadingOneSizeTablet);
        font-style: map-get($configuration, textHeadingOneStyleTablet);
        text-decoration: map-get($configuration, textHeadingOneDecorationTablet);
        line-height: map-get($configuration, textHeadingOneHeightTablet);
        font-weight: map-get($configuration, textHeadingOneWeightTablet);

        margin-top: map-get($configuration, textHeadingOneMarginTopTablet);
        margin-bottom: map-get($configuration, textHeadingOneMarginBottomTablet);
      }

      // Styles for desktop
      @include above($desktopBreakpoint) {
        color: map-get($configuration, textHeadingOneColorDesktop);
        font-family: map-get($configuration, textHeadingOneFontFamilyDesktop);
        font-size: map-get($configuration, textHeadingOneSizeDesktop);
        font-style: map-get($configuration, textHeadingOneStyleDesktop);
        text-decoration: map-get($configuration, textHeadingOneDecorationDesktop);
        line-height: map-get($configuration, textHeadingOneHeightDesktop);
        font-weight: map-get($configuration, textHeadingOneWeightDesktop);

        margin-top: map-get($configuration, textHeadingOneMarginTopDesktop);
        margin-bottom: map-get($configuration, textHeadingOneMarginBottomDesktop);
      }
    }

    h2 {
      color: map-get($configuration, textHeadingTwoColor);
      font-family: map-get($configuration, textHeadingTwoFontFamily);
      font-size: map-get($configuration, textHeadingTwoSize);
      font-style: map-get($configuration, textHeadingTwoStyle);
      text-decoration: map-get($configuration, textHeadingTwoDecoration);
      line-height: map-get($configuration, textHeadingTwoHeight);
      font-weight: map-get($configuration, textHeadingTwoWeight);

      margin-top: map-get($configuration, textHeadingTwoMarginTop);
      margin-bottom: map-get($configuration, textHeadingTwoMarginBottom);

      // Styles for tablet
      @include above($tabletBreakpoint) {
        color: map-get($configuration, textHeadingTwoColorTablet);
        font-family: map-get($configuration, textHeadingTwoFontFamilyTablet);
        font-size: map-get($configuration, textHeadingTwoSizeTablet);
        font-style: map-get($configuration, textHeadingTwoStyleTablet);
        text-decoration: map-get($configuration, textHeadingTwoDecorationTablet);
        line-height: map-get($configuration, textHeadingTwoHeightTablet);
        font-weight: map-get($configuration, textHeadingTwoWeightTablet);

        margin-top: map-get($configuration, textHeadingTwoMarginTopTablet);
        margin-bottom: map-get($configuration, textHeadingTwoMarginBottomTablet);
      }

      // Styles for desktop
      @include above($desktopBreakpoint) {
        color: map-get($configuration, textHeadingTwoColorDesktop);
        font-family: map-get($configuration, textHeadingTwoFontFamilyDesktop);
        font-size: map-get($configuration, textHeadingTwoSizeDesktop);
        font-style: map-get($configuration, textHeadingTwoStyleDesktop);
        text-decoration: map-get($configuration, textHeadingTwoDecorationDesktop);
        line-height: map-get($configuration, textHeadingTwoHeightDesktop);
        font-weight: map-get($configuration, textHeadingTwoWeightDesktop);

        margin-top: map-get($configuration, textHeadingTwoMarginTopDesktop);
        margin-bottom: map-get($configuration, textHeadingTwoMarginBottomDesktop);
      }
    }

    h3 {
      color: map-get($configuration, textHeadingThreeColor);
      font-family: map-get($configuration, textHeadingThreeFontFamily);
      font-size: map-get($configuration, textHeadingThreeSize);
      font-style: map-get($configuration, textHeadingThreeStyle);
      text-decoration: map-get($configuration, textHeadingThreeDecoration);
      line-height: map-get($configuration, textHeadingThreeHeight);
      font-weight: map-get($configuration, textHeadingThreeWeight);

      margin-top: map-get($configuration, textHeadingThreeMarginTop);
      margin-bottom: map-get($configuration, textHeadingThreeMarginBottom);

      // Styles for tablet
      @include above($tabletBreakpoint) {
        color: map-get($configuration, textHeadingThreeColorTablet);
        font-family: map-get($configuration, textHeadingThreeFontFamilyTablet);
        font-size: map-get($configuration, textHeadingThreeSizeTablet);
        font-style: map-get($configuration, textHeadingThreeStyleTablet);
        text-decoration: map-get($configuration, textHeadingThreeDecorationTablet);
        line-height: map-get($configuration, textHeadingThreeHeightTablet);
        font-weight: map-get($configuration, textHeadingThreeWeightTablet);

        margin-top: map-get($configuration, textHeadingThreeMarginTopTablet);
        margin-bottom: map-get($configuration, textHeadingThreeMarginBottomTablet);
      }

      // Styles for desktop
      @include above($desktopBreakpoint) {
        color: map-get($configuration, textHeadingThreeColorDesktop);
        font-family: map-get($configuration, textHeadingThreeFontFamilyDesktop);
        font-size: map-get($configuration, textHeadingThreeSizeDesktop);
        font-style: map-get($configuration, textHeadingThreeStyleDesktop);
        text-decoration: map-get($configuration, textHeadingThreeDecorationDesktop);
        line-height: map-get($configuration, textHeadingThreeHeightDesktop);
        font-weight: map-get($configuration, textHeadingThreeWeightDesktop);

        margin-top: map-get($configuration, textHeadingThreeMarginTopDesktop);
        margin-bottom: map-get($configuration, textHeadingThreeMarginBottomDesktop);
      }
    }

    h4 {
      color: map-get($configuration, textHeadingFourColor);
      font-family: map-get($configuration, textHeadingFourFontFamily);
      font-size: map-get($configuration, textHeadingFourSize);
      font-style: map-get($configuration, textHeadingFourStyle);
      text-decoration: map-get($configuration, textHeadingFourDecoration);
      line-height: map-get($configuration, textHeadingFourHeight);
      font-weight: map-get($configuration, textHeadingFourWeight);

      margin-top: map-get($configuration, textHeadingFourMarginTop);
      margin-bottom: map-get($configuration, textHeadingFourMarginBottom);

      // Styles for tablet
      @include above($tabletBreakpoint) {
        color: map-get($configuration, textHeadingFourColorTablet);
        font-family: map-get($configuration, textHeadingFourFontFamilyTablet);
        font-size: map-get($configuration, textHeadingFourSizeTablet);
        font-style: map-get($configuration, textHeadingFourStyleTablet);
        text-decoration: map-get($configuration, textHeadingFourDecorationTablet);
        line-height: map-get($configuration, textHeadingFourHeightTablet);
        font-weight: map-get($configuration, textHeadingFourWeightTablet);

        margin-top: map-get($configuration, textHeadingFourMarginTopTablet);
        margin-bottom: map-get($configuration, textHeadingFourMarginBottomTablet);
      }

      // Styles for desktop
      @include above($desktopBreakpoint) {
        color: map-get($configuration, textHeadingFourColorDesktop);
        font-family: map-get($configuration, textHeadingFourFontFamilyDesktop);
        font-size: map-get($configuration, textHeadingFourSizeDesktop);
        font-style: map-get($configuration, textHeadingFourStyleDesktop);
        text-decoration: map-get($configuration, textHeadingFourDecorationDesktop);
        line-height: map-get($configuration, textHeadingFourHeightDesktop);
        font-weight: map-get($configuration, textHeadingFourWeightDesktop);

        margin-top: map-get($configuration, textHeadingFourMarginTopDesktop);
        margin-bottom: map-get($configuration, textHeadingFourMarginBottomDesktop);
      }
    }

    h5 {
      color: map-get($configuration, textHeadingFiveColor);
      font-family: map-get($configuration, textHeadingFiveFontFamily);
      font-size: map-get($configuration, textHeadingFiveSize);
      font-style: map-get($configuration, textHeadingFiveStyle);
      text-decoration: map-get($configuration, textHeadingFiveDecoration);
      line-height: map-get($configuration, textHeadingFiveHeight);
      font-weight: map-get($configuration, textHeadingFiveWeight);

      margin-top: map-get($configuration, textHeadingFiveMarginTop);
      margin-bottom: map-get($configuration, textHeadingFiveMarginBottom);

      // Styles for tablet
      @include above($tabletBreakpoint) {
        color: map-get($configuration, textHeadingFiveColorTablet);
        font-family: map-get($configuration, textHeadingFiveFontFamilyTablet);
        font-size: map-get($configuration, textHeadingFiveSizeTablet);
        font-style: map-get($configuration, textHeadingFiveStyleTablet);
        text-decoration: map-get($configuration, textHeadingFiveDecorationTablet);
        line-height: map-get($configuration, textHeadingFiveHeightTablet);
        font-weight: map-get($configuration, textHeadingFiveWeightTablet);

        margin-top: map-get($configuration, textHeadingFiveMarginTopTablet);
        margin-bottom: map-get($configuration, textHeadingFiveMarginBottomTablet);
      }

      // Styles for desktop
      @include above($desktopBreakpoint) {
        color: map-get($configuration, textHeadingFiveColorDesktop);
        font-family: map-get($configuration, textHeadingFiveFontFamilyDesktop);
        font-size: map-get($configuration, textHeadingFiveSizeDesktop);
        font-style: map-get($configuration, textHeadingFiveStyleDesktop);
        text-decoration: map-get($configuration, textHeadingFiveDecorationDesktop);
        line-height: map-get($configuration, textHeadingFiveHeightDesktop);
        font-weight: map-get($configuration, textHeadingFiveWeightDesktop);

        margin-top: map-get($configuration, textHeadingFiveMarginTopDesktop);
        margin-bottom: map-get($configuration, textHeadingFiveMarginBottomDesktop);
      }
    }

    h6 {
      color: map-get($configuration, textHeadingSixColor);
      font-family: map-get($configuration, textHeadingSixFontFamily);
      font-size: map-get($configuration, textHeadingSixSize);
      font-style: map-get($configuration, textHeadingSixStyle);
      text-decoration: map-get($configuration, textHeadingSixDecoration);
      line-height: map-get($configuration, textHeadingSixHeight);
      font-weight: map-get($configuration, textHeadingSixWeight);

      margin-top: map-get($configuration, textHeadingSixMarginTop);
      margin-bottom: map-get($configuration, textHeadingSixMarginBottom);

      // Styles for tablet
      @include above($tabletBreakpoint) {
        color: map-get($configuration, textHeadingSixColorTablet);
        font-family: map-get($configuration, textHeadingSixFontFamilyTablet);
        font-size: map-get($configuration, textHeadingSixSizeTablet);
        font-style: map-get($configuration, textHeadingSixStyleTablet);
        text-decoration: map-get($configuration, textHeadingSixDecorationTablet);
        line-height: map-get($configuration, textHeadingSixHeightTablet);
        font-weight: map-get($configuration, textHeadingSixWeightTablet);

        margin-top: map-get($configuration, textHeadingSixMarginTopTablet);
        margin-bottom: map-get($configuration, textHeadingSixMarginBottomTablet);
      }

      // Styles for desktop
      @include above($desktopBreakpoint) {
        color: map-get($configuration, textHeadingSixColorDesktop);
        font-family: map-get($configuration, textHeadingSixFontFamilyDesktop);
        font-size: map-get($configuration, textHeadingSixSizeDesktop);
        font-style: map-get($configuration, textHeadingSixStyleDesktop);
        text-decoration: map-get($configuration, textHeadingSixDecorationDesktop);
        line-height: map-get($configuration, textHeadingSixHeightDesktop);
        font-weight: map-get($configuration, textHeadingSixWeightDesktop);

        margin-top: map-get($configuration, textHeadingSixMarginTopDesktop);
        margin-bottom: map-get($configuration, textHeadingSixMarginBottomDesktop);
      }
    }
  }
}

@include text();
